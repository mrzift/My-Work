//--- 1st Method ---//

public static int gcd(int a, int b){
        int temp=0;
        for(int i=1; i<=(a | b);i++) {
            if (a % i == 0 & b % i == 0) {
                temp = i;
            }
        }
        return temp;
    }
    
//--- 2nd Method ---//

public static int gcd(int a, int b) {
        int min = Math.min(a, b);
        while (min > 0) {
            if (a % min == 0 & b % min == 0) {
                break;
            }
            min--;
        }
        return min;
    }

//--- Euclidean Algorithm ---//

public static int gcd(int a, int b) {
        while (a!=b) {
            if (a>b)
                a=a-b;
            else
                b=b-a;
        }
        return a;
    }
    
//--- Optimised Euclidean Algorithm ---//

public static int gcd(int a, int b) {
        if (b==0) {
            return a;
        }
        else{
            return gcd(b,a%b);
        }
    }
